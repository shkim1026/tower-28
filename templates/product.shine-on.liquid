{% include 'product-variantPopover' %}

<div class="mobile-zoom-overlay"><span class="js-MobileZoom-close mobile-zoom-close"><i class="icon-close"></i></span></div>

{% assign on_sale = false %}
{% if product.compare_at_price > product.price %}
  {% assign on_sale = true %}
  {% assign on_sale_class = ' is-sale' %}
{% endif %}

{% assign sold_out = true %}
{% if product.available %}
  {% assign sold_out = false %}
{% endif %}

<div >
<meta itemprop="url" content="{{ shop.url }}{{ product.url }}">
<meta itemprop="image" content="{{ product.featured_image.src | img_url: 'grande' }}">

{% section 'product-template-shine-on' %}
{% section 'product-features__product-template-shine-on' %}
{% section 'rich-text__product-template-shine-on' %}
{% section 'icons-row__product-template-shine-on' %}
{% section 'related-products-shine-on' %}

<script type="text/javascript">
  var enableColorSwatches = jQuery('.productForm').data('color_swatches');
  var selectCallback = function(variant, selector) {
    Product.callback({
      money_format: "{{ shop.money_format | replace: 'money', '\"money\"' }}",
      variant: variant,
      selector: selector
    });

    // BEGIN SWATCHES
    if (enableColorSwatches) {
      if (variant) {
        var form = $('#' + selector.domIdPrefix).closest('form');
        for (var i=0,length=variant.options.length; i<length; i++) {
          var radioButton = form.find('.swatch[data-option-index="' + i + '"] :radio[value="' + variant.options[i] +'"]');
          if (radioButton.size()) {
            radioButton.get(0).checked = true;
          }
        }
      }
    }
    // END SWATCHES
  };

  jQuery(function($) {
    new Shopify.OptionSelectors('product-select', {
      product: {{product | json}},
      onVariantSelected: selectCallback
    });

    if (enableColorSwatches) {
      $('.productForm').on('change', '.swatch :radio', function() {
        var optionIndex = $(this).closest('.swatch').attr('data-option-index');
        var optionValue = $(this).val();

        $(this)
          .closest('form')
          .find('.single-option-selector')
          .eq(optionIndex)
          .val(optionValue)
          .trigger('change');

        // Change money format
        if ( typeof(Currency) != 'undefined' && Currency ){
					    Currency.convertAll(shopCurrency, $('[name=currencies]').val());
					    onCurrencySet();
					}
        
      });
    }

    manageOptions();

    function manageOptions(){
      var obj = {{product | json}};

      /*
       * option_selection.js doesn't add a label if there's only one option,
       * so this logic:
       * * adds a label (and arrow) if there's only one option and multiple variants
       * * prepends the arrow if there are more than on option (this is a normal successful call to option_selection.js)
       * * hides the select element and wrapper if there is only one variant
       *
       * This code is reused here from Site.quickView.selectOptions() in shop.js. Slightly edited: ['name'] is not
       * needed here because Shopify produces two different JSON objects depending on how you call it i.e. AJAX vc {{product | json}}
       */
      if (obj['options'].length === 1 && obj['variants'].length){
        if (obj['variants'][0].title === 'Default Title') {
          for (i = 0; i < obj['options'].length; i++) {
            $('#product-select-option-'+[i]).closest('.productForm-block').hide();
          }
        } else {
          for (i = 0; i < obj['options'].length; i++) {
            $('#product-select-option-'+[i]).closest('.selector-wrapper').attr('data-id', '#product-select-option-'+[i]).prepend('<span class="selectArrow"></span><label>'+obj['options'][0]+'</label>');
          }
        }
      } else if (obj['options'].length > 1){
        for (i = 0; i < obj['options'].length; i++) {
          $('#product-select-option-'+[i]).closest('.selector-wrapper').attr('data-id', '#product-select-option-'+[i]).prepend('<span class="selectArrow"></span>');
        }
      }
    }
  });
</script>

  
 
<div id="stamped-main-widget" class="stamped-main-widget" data-product-id="{{ product.id }}" data-name="{{ product.title | escape }}" data-url="{{ shop.url }}{{ product.url }}" data-image-url="{{ product.featured_image | product_img_url: "large" |replace: " ? ", " % 3F" | replace: "& "," % 26"}}" data-description="{{ product.description | escape }}" data-product-sku="{{product.handle}}" data-product-type="{{product.type}}"> {{ product.metafields.stamped.reviews }} </div>
 


